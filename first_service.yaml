openapi: "3.1.0"
info:
  title: Worker Service API
  description: |-
    OpenAPI specification for the service which manages the collection of the Worker class.
    Services must meet the following requirements:
    
    - The API implemented by the service must comply with the recommendations of the RESTful approach.
    - The following basic set of operations with collection objects must be implemented: adding a new element, 
    retrieving an element by ID, updating an element, deleting an element, retrieving an array of elements.
    - The operation performed on the collection object must be defined by the HTTP request method.
    - The operation of obtaining an array of elements must support the ability to sort and filter by any combination of 
    class fields, as well as the ability to display the results of the selection page by page, indicating the size and 
    sequence number of the page being displayed.
    - All parameters necessary to perform the operation must be passed in the request URL.
    - Information about collection items must be submitted in json format.
    - If data that violates the integrity constraints specified at the class level is transmitted to the service, the 
    service must return an HTTP response code corresponding to the error that occurred.
    
    In addition, the service must implement the following operations:
    
    - Delete one (any) object whose startDate field value is equivalent to the specified value.
    - Return one (any) object whose salary field value is the minimum.
    - Return the number of objects whose startDate field value is less than the specified value.
    
    These operations must be placed on separate URLs.

  contact:
    name: Mila T
    email: myilanka8@gmail.com
  version: "1.0"
servers:
  - url: https://localhost:8080/api/v1/workers
tags:
  - name: Workers
    description: Operations related to Worker entities
  - name: Workers Execution
    description: Operations that execute specific actions on Worker entities
paths:
  /workers:
    get:
      tags:
        - Workers
      summary: Returns a list of workers
      description: Retrieves an array of worker objects with optional filtering, sorting, and pagination.
      parameters:
        - $ref: 'models.yaml#/components/parameters/page'
        - $ref: 'models.yaml#/components/parameters/size'
      responses:
        '200':
          description: A JSON array of worker objects
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/PaginatedWorkersResponse'
        '400':
          description: Bad Request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
    post:
      tags:
        - Workers
      summary: Creates a new worker
      description: Adds a new worker to the collection.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'models.yaml#/components/schemas/NewWorker'
      responses:
        '201':
          description: Worker created successfully
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/Worker'
        '400':
          description: Bad Request - Invalid input data
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
  /workers/search:
    post:
      tags:
        - Workers
      summary: Searches for workers based on criteria
      description: Retrieves an array of worker objects that match the specified search criteria.
      parameters:
        - $ref: 'models.yaml#/components/parameters/page'
        - $ref: 'models.yaml#/components/parameters/size'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'models.yaml#/components/schemas/SearchCriteria'
      responses:
        '200':
          description: A JSON array of worker objects matching the criteria
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/PaginatedWorkersResponse'
        '400':
          description: Bad Request - Invalid parameters or criteria
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
  /workers/{id}:
    get:
      tags:
        - Workers
      summary: Retrieves a worker by ID
      description: Fetches a single worker object by its unique ID.
      parameters:
        - $ref: 'models.yaml#/components/parameters/id'
      responses:
        '200':
          description: Worker found
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/Worker'
        '404':
          description: Not Found - Worker does not exist
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
    put:
      tags:
        - Workers
      summary: Updates an existing worker
      description: Modifies the details of an existing worker identified by its ID.
      parameters:
        - $ref: 'models.yaml#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'models.yaml#/components/schemas/NewWorker'
      responses:
        '200':
          description: Worker updated successfully
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/Worker'
        '400':
          description: Bad Request - Invalid input data
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Worker does not exist
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Workers
      summary: Deletes a worker by ID
      description: Removes a worker from the collection using its unique ID.
      parameters:
        - $ref: 'models.yaml#/components/parameters/id'
      responses:
        '204':
          description: Worker deleted successfully
        '404':
          description: Not Found - Worker does not exist
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
  /workers/by-start-date:
    delete:
      tags:
        - Workers Execution
      summary: Deletes a worker by start date
      description: Deletes one (any) worker whose startDate field value is equivalent to the specified value.
      parameters:
        - $ref: 'models.yaml#/components/parameters/start-date'
      responses:
        '204':
          description: Worker deleted successfully
        '404':
          description: Not Found - No worker with the specified start date exists
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
        '400':
          description: Bad Request - Invalid start date format
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
  /workers/by-min-salary:
    get:
      tags:
        - Workers Execution
      summary: Retrieves the worker with the minimum salary
      description: Returns one (any) worker whose salary field value is the minimum.
      responses:
        '200':
          description: Worker with minimum salary found
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/Worker'
        '404':
          description: Not Found - No workers exist
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
  /workers/count-by-start-date:
    post:
      tags:
        - Workers Execution
      summary: Counts workers with start date less than the specified value
      description: Returns the number of workers whose startDate field value is less than the specified value.
      parameters:
        - $ref: 'models.yaml#/components/parameters/start-date'
      responses:
        '200':
          description: Count retrieved successfully
          content:
            application/json:
              schema:
                type: integer
                example: 5
        '400':
          description: Bad Request - Invalid start date format
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'models.yaml#/components/schemas/ErrorResponse'








